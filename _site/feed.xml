<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>张云浩的个人站点</title>
    <description>这是我的个人网站，主要分享一些有有意思的文章。
</description>
    <link>http://yourdomain.com/</link>
    <atom:link href="http://yourdomain.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 14 May 2016 20:57:01 +0800</pubDate>
    <lastBuildDate>Sat, 14 May 2016 20:57:01 +0800</lastBuildDate>
    <generator>Jekyll v3.1.3</generator>
    
      <item>
        <title>[课程讲稿]从破译者的角度浅析网络安全</title>
        <description>&lt;h1 id=&quot;section&quot;&gt;从破译者的角度浅析网络安全&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;实验前言：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;本实验本意是希望大家对网络安全提起足够的重视，请不要恶意使用本实验内容随意盗窃他人账号，如果发生后果，本人概不承担责任！&lt;/li&gt;
  &lt;li&gt;本文作为 陈昕 老师课程 计算机网络 的实验讲解文稿&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;实验内容一：简单的破解校园网关&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;本实验模拟了破译者使用最简单的方法（暴力破解）破解网关的过程。&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;今天我尝试使用最简单的方式，来演示如何简单破解我校网关账户&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;u&gt;第一步，分析用何种方式破解&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;最简单的方式：暴力穷举&lt;/li&gt;
  &lt;li&gt;稍微复杂的方式：获取数据库或者网站的管理员权限&lt;/li&gt;
  &lt;li&gt;比较复杂的方式：使用漏洞破解数据库&lt;/li&gt;
  &lt;li&gt;更复杂的方式：暂时不介绍&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;工具清单：&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;计算机环境：python2.7,Mac os 10.11&lt;/li&gt;
  &lt;li&gt;抓包工具：Chrome for mac&lt;/li&gt;
  &lt;li&gt;解释器：Pycharm for mac  （可更换为官方IDE）&lt;/li&gt;
  &lt;li&gt;网络环境：校园内网&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;u&gt;**第二步，寻找可以验证尝试密码，即可以登录网关的网站(此处有多种选择)**&lt;/u&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;网络邮局，URL：http://202.205.80.154&lt;/li&gt;
  &lt;li&gt;用chrome打开以上URL，尝试抓包，观察数据：&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;写入尝试密码，网关账号填入test_userid ,网关密码填入test_password&lt;/li&gt;
  &lt;li&gt;打开开发者工具，并点击NetWork&lt;/li&gt;
  &lt;li&gt;点击页面上的“连接”按钮，将我们填写的表单发送&lt;/li&gt;
  &lt;li&gt;可以看到NetWork监测到了一些网络请求，打开其中第一个“202.205.80.10”&lt;/li&gt;
  &lt;li&gt;点开右边Headers的标签，可以看到这一次网络请求的头部，拖到最下面’form data’，可以发现我们给服务器发送了以下内容：&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;DDDDD : test_userid&lt;/li&gt;
  &lt;li&gt;upass : test_password&lt;/li&gt;
  &lt;li&gt;0MKKey : login&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;（多么任性的变量名……）&lt;/p&gt;

&lt;p&gt;6.至此，我们可以确定是这一次Post行为，使得服务器检验了我们的账户和密码来达到登录的效果，但是还不确定，不妨让我们来试一下&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;u&gt;第三步，尝试登录&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;让我们用抓包获得的信息，模拟浏览器进行一次请求吧&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#Author:张云浩 2016.4.29&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib2&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;login_gateway&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 构造我们post给服务器的数据,这是服务器验证我们身份的依据,以及通过这个判断我们的行为&#39;login&#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		        &lt;span class=&quot;s&quot;&gt;&quot;DDDDD&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		        &lt;span class=&quot;s&quot;&gt;&quot;upass&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		        &lt;span class=&quot;s&quot;&gt;&quot;0MKKey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;login&quot;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 构造头文件,实际使用中是不需要的,可能是网站为了兼容性牺牲,也可能纯粹为了偷懒......&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;s&quot;&gt;&#39;Host&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;202.205.80.10&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;s&quot;&gt;&#39;Origin&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;http://202.205.80.154&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;s&quot;&gt;&#39;Referer&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;http://202.205.80.154/&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;s&quot;&gt;&#39;User-Agent&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3)&#39;&lt;/span&gt;
                     &lt;span class=&quot;s&quot;&gt;&#39; AppleWebKit/537.36 (KHTML, like Gecko) &#39;&lt;/span&gt;
                     &lt;span class=&quot;s&quot;&gt;&#39;Chrome/49.0.2623.87 Safari/537.36&#39;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# 将我们post的数据进行合理的编码,使得网站可以辨认&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;post_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlencode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 从抓包分析到的服务器处理请求的url&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;login_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;http://202.205.80.10/&#39;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 构建一个请求对象,包含上面定义的数据,头文件,服务器地址&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;login_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 发送我们的请求给服务器,并将返回的数据作为一个对象保存在response中&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 返回服务器回应的内容&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 向服务器发送登录请求&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;login_gateway&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;gb2312&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;以上的代码可以向服务器发送一个request请求并返回服务器返回的内容，这个内容可以作为我们检验密码是否正确的依据（有兴趣的同学可以将以上代码中最下方两个’test’替换成正确的密码，即可实现网关的登录）&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;显然，这样是无法返回正确的内容的(因为我并没有传递给服务器正确的账户密码)，服务器回应的是一个对应错误登录的内容。我们可以将自己正确的网关账号输入上去，可以看到对应正确登录的内容。&lt;/li&gt;
      &lt;li&gt;快速验证返回内容是否正确的诀窍是：找出正确或者错误回应中，唯一的内容（即另一种回应全文无法找到该信息）&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;strong&gt;Tips : 最近由于校园网频频改版，以上代码可能无法使用，但原理是不变的。&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;u&gt;第四步，尝试暴力破解&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;最简单的方式：使用弱密码遍历，如6个重复数字，顺序数字等（耗时忽略不计）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;简单的方式：使用for循环，实现简单的任意遍历（每百次约耗时14.85秒，若实现遍历所有6位数字，大约需要42小时）&lt;/li&gt;
  &lt;li&gt;更接近暴力破解的方式：使用python自带的多线程遍历，使用简单的新建线程即可（6位数字全部遍历，大约需要0-30分钟）&lt;/li&gt;
  &lt;li&gt;更聪明的方式：安全风险较大，仅口头介绍&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;让我们梳理一下上面理论上的知识点&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;常用HTTP协议的请求报文—通常是用户向服务器发送的获取某一页面内容的请求
    &lt;ul&gt;
      &lt;li&gt;GET方式：请求读取由URL所标识的信息&lt;/li&gt;
      &lt;li&gt;POST方式：给服务器添加信息&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;用户访问一个网站的过程解析：
    &lt;ul&gt;
      &lt;li&gt;第一步，用户使用浏览器分析指向的URL（统一资源定位符，可以简单的理解为浏览器显示的网站地址）&lt;/li&gt;
      &lt;li&gt;第二步, 浏览器向DNS服务器申请域名解析，获取网站IP地址&lt;/li&gt;
      &lt;li&gt;第三步，浏览器获得从DNS返回的IP地址&lt;/li&gt;
      &lt;li&gt;第四步，浏览器请求与服务器建立TCP连接（默认端口一般为80）&lt;/li&gt;
      &lt;li&gt;第五步，浏览器向服务器发出HTTP请求（如上面的POST方式或GET方式）&lt;/li&gt;
      &lt;li&gt;第六步，服务器返回响应给浏览器，这一般是页面的内容或相应的文件&lt;/li&gt;
      &lt;li&gt;第七步，TCP连接中断&lt;/li&gt;
      &lt;li&gt;第八步，浏览器解析返回的信息（一般由html,css,JavaScript等组成）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;暴力破解的为什么有速度限制？&lt;/p&gt;

    &lt;p&gt;​答：因为每一次验证密码，都要对服务器进行一次‘用户请求’-&amp;gt;服务器接收’-&amp;gt;’服务器验证’-&amp;gt;‘服务器返回信息’-&amp;gt;’用户接收回应’的过程，限制因素非常多，甚至有时出现服务器不响应的情况，需要额外的代码去处理这些错误。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;wifi&quot;&gt;实验内容二：使用伪装WIFI，抓包截取用户密码&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;本实验模拟了免费WIF如何盗取用户密码的过程。&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;例如，在一个公共场合，建立一个伪装成免费WIFI的无线网络（比如可设置为cau-free-wifi），诱惑用户连接WIFI,在用户连上了以后，用户访问的所有网络数据都可以被截获，极易造成账户密码的泄露。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;工具清单：&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;抓包工具: WireShark for mac 2.0.3&lt;/li&gt;
  &lt;li&gt;WIFI共享工具： mac os 自带&lt;/li&gt;
  &lt;li&gt;系统环境： mac os 10.11&lt;/li&gt;
  &lt;li&gt;网络环境：自建wifi或以校园内网为基础的wifi&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;u&gt;第一步，创建伪装网络wifi&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;网络来源：校园wifi或已连接上网络的wifi&lt;/li&gt;
  &lt;li&gt;网络伪装ssid：CAU或CAUNET或XXX免费WIFI 等&lt;/li&gt;
  &lt;li&gt;网络共享，开启ssid广播&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;u&gt;第二步：使用抓包软件，截获用户的数据包&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;选取抓包端口:wifi的对应端口&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;创建过滤器：是查看http协议中向服务器用post（或get）方式发送的数据&lt;/li&gt;
  &lt;li&gt;查看包含明文的数据：从From data处可获得所有post的数据&lt;/li&gt;
  &lt;li&gt;查看截获的加密数据：如果有简单的Md5加密或base64编码，可破解（如今安全性高的网站或应用已经不能直接看到明文）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;现在我们知道，为什么不能连接免费的wifi了吧？因为我们访问所有链接的过程全都被抓包工具记录下来，很容易造成密码的泄露。&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;让我们梳理一下上面理论上的知识点&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;抓包的基本原理：&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;我们抓到的包是什么？&lt;/p&gt;

    &lt;p&gt;答：包(Packet)：在包交换网络里，单个消息被划分为多个数据块，这些数据块称为包，它包含发送者和接收者的地址信息。这些包然后沿着不同的路径在一个或多个网络中传输，并且在目的地重新组合。&lt;/p&gt;

    &lt;p&gt;​	数据包主要由“目的IP地址”、“源IP地址”、“净载数据”等部分构成，包括包头和包体，包头是固定长度，包体的长度不定，各字段长度固定，双方的请求数据包和应答数据包的包头结构是一致的，不同的是包体的定义。 数据包的结构与我们平常写信非常类似，目的IP地址是说明这个数据包是要发给谁的，相当于收信人地址；源IP地址是说明这个数据包是发自哪里的，相当于发信人地址；而净载数据相当于信件的内容。 正是因为数据包具有这样的结构，安装了TCP/IP协议的计算机之间才能相互通信。我们在使用基于TCP/IP协议的网络时，网络中其实传递的就是数据包。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;我们为什么能够抓到包？&lt;/p&gt;

    &lt;p&gt;答：在一般情况下，网络上所有的机器都可以“听”到通过的流量，但对不属于自己的数据包则不予响应（换句话说，工作站A不会捕获属于工作站B的数据，而是简单地忽略这些数据）。如果某个工作站的网络接口处于混杂模式，那么它就可以捕获网络上所有的数据包和帧。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;为什么别人能从包里面截取我们的信息？&lt;/p&gt;

    &lt;p&gt;答：因为一般安全性不高的应用和网站（诸如微博，论坛，网关）没有对POST数据进行加密（或者用简单方式加密，如BASE64,MD5），致使数据在数据包中以明文显示，所以能轻易看到这些信息。（编者注：BASE64其实是一种编码方式，不涉及加密）&lt;/p&gt;

    &lt;p&gt;​        即便劫持者没有能力破解账户密码，也可以了解你访问的网站，用户名，浏览历史。这对进一步使用木马或者其他方式破解带来了很多可能。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-2&quot;&gt;后续&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;安全密码的建议&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;请大家不要使用 弱密码，纯数字密码&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;密码中尽量不要包含个人信息，包括名字，生日，学校&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;比较安全的密码（举例）：每个网站登录密码相互独立，并且使用随机数生成（伪随机数对于一般用户足矣）&lt;/p&gt;

    &lt;p&gt;​&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;更多的信息&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;这部分尝试登录内容，仅仅是我编写的【农大网关自动登录】脚本的一小部分内容，想要尝试一下我编写的脚本，可以访问-爱思资源站的分享（已经完成打包测试，使用非常简单，让我们登录网关的过程没有丝毫拖泥带水）：http://is.cau.edu.cn/forum.php?mod=viewthread&amp;amp;tid=201963&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;另外关于本校可用脚本还有【Urp绩点计算系统】和【农大网关流量监测系统】，在爱思PT上都有相应的分享:http://is.cau.edu.cn/forum.php?mod=viewthread&amp;amp;tid=201547&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;想要了解以上项目的最新的改进，可以访问我的GitHub关注这些项目的最新进展:https://github.com/ZYunH&lt;/p&gt;

    &lt;p&gt;​&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 14 May 2016 17:38:43 +0800</pubDate>
        <link>http://yourdomain.com/jekyll/update/2016/05/14/wangluoanquan.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/update/2016/05/14/wangluoanquan.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
